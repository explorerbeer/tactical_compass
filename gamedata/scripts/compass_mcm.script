-- Minimap disable: RavenAscendant --
-- Author: explorerbee --
-- Date: 06.10.2024 --

local KEY = DIK_keys.DIK_SLASH

local mode = 0
local modifier = 0
local mcm_keybinds = ui_mcm and ui_mcm.key_hold

local defaults = {
    ["tc_main/d_t_show"] = true,
    ["tc_main/compass_sc_pos"] = 0,
    ["tc_markers/show_quest"] = true,
    ["tc_markers/show_quest_dist"] = 400.0,
    ["tc_markers/show_unique"] = true,
    ["tc_markers/show_unique_dist"] = 60.0,
    ["tc_markers/show_sleep"] = true,
    ["tc_markers/show_sleep_dist"] = 50.0,
    ["tc_markers/show_stashes"] = true,
    ["tc_markers/show_stashes_dist"] = 100.0,
    ["tc_markers/show_transitions"] = true,
    ["tc_markers/show_transitions_dist"] = 300.0,
    ["tc_markers/show_squads"] = false,
    ["tc_markers/show_squads_dist"] = 50.0,
    ["tc_markers/show_corpses"] = false,
    ["tc_markers/show_corpses_dist"] = 35.0,
    ["tc_markers/show_campf"] = false,
    ["tc_markers/show_campf_dist"] = 30.0,
    ["tc_markers/show_pump"] = false,
    ["tc_markers/show_pump_dist"] = 40.0,
}

local table_compass_sc_pos = {
    { 0, "ui_mcm_compass_state_up" },
    { 1, "ui_mcm_compass_state_down" }
}

function get_config(key)
    if ui_mcm then return ui_mcm.get("tactic_compass/" .. key) else return defaults[key] end
end

function on_option_change(mcm)
    if mcm then
        KEY = ui_mcm.get("tactic_compass/tc_keybinds/hotkey") or KEY
        mode = ui_mcm.get("tactic_compass/tc_keybinds/mode")
        modifier = ui_mcm.get("tactic_compass/tc_keybinds/modifier")
    end
end

function on_key_hold(key)
    if mcm_keybinds and (key == KEY) and (mode == 2) and ui_mcm.get_mod_key(modifier) and ui_mcm.key_hold("tactic_compass", key, 5) then
        toggle_compass()
    end
end

function on_key_press(key)
    if key == KEY then
        if not mcm_keybinds then
            toggle_compass()
            return
        end

        if mode == 0 then
            ui_mcm.simple_press("tactic_compass", key, toggle_compass)
        end
    
        if mode == 1 and ui_mcm.get_mod_key(modifier) and ui_mcm.double_tap("tactic_compass", key) then
            toggle_compass()
            return
        end
    end    
end

function on_mcm_load()
    op = {
        id = "tactic_compass",
        gr = {
            {
                id = "tc_main", sh = true, gr = {
                    { id = "title", type = "slide", text = "ui_mcm_compass_title", link = "ui_options_slider_player", size = { 512, 50 }, spacing = 20 },
                    { id = "d_t_show", type = "check", val = 1, def = true },
                    { id = "divider", type = "line" },
                    { id = "compass_sc_pos", type = "list", val = 2, def = 0, content = table_compass_sc_pos, no_str = true }
                }
            },
            {
                id = "tc_keybinds", sh = true, gr = {
                    { id = "title", type = "slide", text = "ui_mcm_keybinds_title", link = "ui_options_slider_player", size = { 512, 50 }, spacing = 20 },
                    { id = "hotkey", type = "key_bind", val = 2, def = KEY },
                    { id = "modifier", type = ui_mcm.kb_mod_radio, val = 2, def = 0, hint = "mcm_kb_modifier", content = { { 0, "mcm_kb_mod_none" }, { 1, "mcm_kb_mod_shift" }, { 3, "mcm_kb_mod_alt" } } },
                    { id = "mode", type = ui_mcm.kb_mod_radio, val = 2, def = 0, hint = "mcm_kb_mode", content = { { 0,"mcm_kb_mode_press" }, { 1,"mcm_kb_mode_dtap" }, { 2,"mcm_kb_mode_hold" } } },
                }
            },
            {
                id = "tc_markers", sh = true, gr = {
                    { id = "markers_title", type = "slide", text = "ui_mcm_markers_title", link = "ui_options_slider_player", size = { 512, 50 }, spacing = 20 },
                    { id = "m_desc", type = "desc", clr = { 255, 255, 255, 0 }, text = "ui_mcm_tc_markers_marker_m_desc"  },
                    { id = "show_quest", type = "check", val = 1, def = true },
                    { id = "show_quest_dist", type = "track", val = 2, min = 100.0, max = 500.0, step = 10.0, def = 400.0 },
                    { id = "divider", type = "line" },
                    { id = "show_unique", type = "check", val = 1, def = true },
                    { id = "show_unique_dist", type = "track", val = 2, min = 10.0, max = 100.0, step = 5.0, def = 60.0 },
                    { id = "divider", type = "line" },
                    { id = "show_sleep", type = "check", val = 1, def = true },
                    { id = "show_sleep_dist", type = "track", val = 2, min = 10.0, max = 100.0, step = 5.0, def = 50.0 },
                    { id = "divider", type = "line" },
                    { id = "show_stashes", type = "check", val = 1, def = true },
                    { id = "show_stashes_dist", type = "track", val = 2, min = 10.0, max = 200.0, step = 10.0, def = 100.0 },
                    { id = "divider", type = "line" },
                    { id = "show_transitions", type = "check", val = 1, def = true },
                    { id = "show_transitions_dist", type = "track", val = 2, min = 100.0, max = 500.0, step = 10.0, def = 300.0 },
                    { id = "divider", type = "line" },
                    { id = "show_squads", type = "check", val = 1, def = false },
                    { id = "show_squads_dist", type = "track", val = 2, min = 10.0, max = 100.0, step = 5.0, def = 50.0 },
                    { id = "divider", type = "line" },
                    { id = "show_corpses", type = "check", val = 1, def = false },
                    { id = "show_corpses_dist", type = "track", val = 2, min = 5.0, max = 50.0, step = 5.0, def = 35.0 },
                    { id = "divider", type = "line" },
                    { id = "show_campf", type = "check", val = 1, def = false },
                    { id = "show_campf_dist", type = "track", val = 2, min = 1.0, max = 50.0, step = 5.0, def = 30.0 },
                    { id = "divider", type = "line" },
                    { id = "show_pump", type = "check", val = 1, def = false },
                    { id = "show_pump_dist", type = "track", val = 2, min = 10.0, max = 100.0, step = 5.0, def = 40.0 }
                }
            }
        }
    }
    
    return op
end

function on_game_start()
    RegisterScriptCallback("on_option_change", on_option_change)
    RegisterScriptCallback("on_key_hold", on_key_hold)
    RegisterScriptCallback("on_key_press", on_key_press)
	on_option_change(mcm_keybinds)
end

function toggle_compass()
    minimap_enabled = ui_options.get("video/hud/show_minimap")
    ui_options.set("video/hud/show_minimap", not minimap_enabled)

    local maingameui = ActorMenu.get_maingame()
    if maingameui and maingameui.UIZoneMap then
        maingameui.UIZoneMap.disabled = minimap_enabled
        maingameui.UIMotionIcon:Show(maingameui.UIZoneMap.disabled == false)
    end

    if minimap_enabled then
        marker.activate_markers()
        compass.activate_compass()
    else
        marker.deactivate_markers()
        compass.deactivate_compass()
    end
end