-- Adapted From: A.N.T.H.O.L.O.G.Y. --
-- Original author(?): Zateynik Melinite
-- Credits: Strogglet15, Tronex, RavenAscendant --
-- Reworked by: explorerbee --

HUD = nil

local screen_center = tc_variables.TC_SCREEN_CENTER
local compass_width = tc_variables.TC_COMPASS_WIDTH

local compass_up = tc_variables.TC_COMPASS_UP
local compass_down = tc_variables.TC_COMPASS_DOWN

local is_show_compass = true

class "HUDCompass" (CUIScriptWnd)

function HUDCompass:__init()
    super()
    self._tmr = time_global()

    self:InitControls()
end

function HUDCompass:InitControls()
    self:SetAutoDelete(true)

    self.xml = CScriptXmlInit()
    local xml = self.xml
    self.xml:ParseFile("ui_compass.xml")

    self.compass_container = xml:InitStatic("compass_container", self)

    -- Legacy
    self.bg = xml:InitStatic("compass_container:bg", self.compass_container)
    self.line_compass_radian = xml:InitTextWnd("compass_container:line_compass_radian", self.compass_container)

    self.cardinal_dir = xml:InitStatic("compass_container:cardinal_dir", self.compass_container)
    self.static_compass = xml:InitStatic("compass_container:static_frame", self.compass_container)
end

function HUDCompass:Update()
    CUIScriptWnd.Update(self)
    self:Refresh()
    self.compass_container:Show(is_show_compass and main_hud_shown())
end

function HUDCompass:Refresh()
    local compass_pos_state = compass_mcm.get_config("tc_main/compass_sc_pos")

    -- Legacy
    local angle = compass_utils.calc_angle()

    self.line_compass_radian:SetText(tostring(math.floor(angle + 0.5)))

    local frect_x1 = angle * 10
    local frect_y1 = 0

    local cardinal_dir_init_width = 2400
    local cardinal_dir_init_height = 100

    local frect_x2 = frect_x1 + cardinal_dir_init_width
    local frect_y2 = frect_y1 + cardinal_dir_init_height

    local compass_x = screen_center - compass_width / 2
    local compass_y = (compass_pos_state == 1) and compass_up or compass_down

    self.compass_container:SetWndPos(vector2():set(compass_x, compass_y))

    self.cardinal_dir:SetTextureRect(Frect():set(frect_x1, frect_y1, frect_x2, frect_y2))
end

function HUDCompass:__finalize()
end

function activate_compass()
    if HUD == nil then
        HUD = HUDCompass()
        get_hud():AddDialogToRender(HUD)
        HUD:Refresh()
    end
end

function deactivate_compass()
    if HUD ~= nil then
        get_hud():RemoveDialogToRender(HUD)
        HUD = nil
    end
end

function compass_toggle(key)
    if key ~= compass_mcm.get_config("tc_keybinds/keybind") then return end

    is_show_compass = not is_show_compass
end

function on_game_start()
    RegisterScriptCallback("actor_on_first_update", activate_compass)
    RegisterScriptCallback("actor_on_net_destroy", deactivate_compass)
	RegisterScriptCallback("actor_on_before_death", deactivate_compass)

    RegisterScriptCallback("on_key_press", compass_toggle)
end